<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\ADC.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\ADC.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.02 [Build 28]: Last Updated: Thu Dec 06 11:45:35 2012
<BR><P>
<H3>Maximum Stack Usage =        128 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; InitRadioTransmit &rArr; RadioSetFrequency &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[18]">ADC0_Int_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">ADC0_Int_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC0_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[28]">DMA_ADC_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[1f]">DMA_Err_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[27]">DMA_I2C0_MRX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[26]">DMA_I2C0_MTX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[25]">DMA_I2C0_SRX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[24]">DMA_I2C0_STX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[2a]">DMA_SPI0_RX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[29]">DMA_SPI0_TX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[21]">DMA_SPI1_RX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[20]">DMA_SPI1_TX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[23]">DMA_UART_RX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[22]">DMA_UART_TX_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[b]">Ext_Int0_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[c]">Ext_Int1_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[d]">Ext_Int2_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[e]">Ext_Int3_Handler</a> from switches.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[f]">Ext_Int4_Handler</a> from switches.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[10]">Ext_Int5_Handler</a> from switches.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[11]">Ext_Int6_Handler</a> from switches.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[12]">Ext_Int7_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[13]">Ext_Int8_Handler</a> from radioeng.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[19]">Flsh_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[16]">GP_Tmr0_Int_Handler</a> from microphone.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[17]">GP_Tmr1_Int_Handler</a> from switches.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[1e]">I2C0_Master_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[1d]">I2C0_Slave_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[2c]">PWM0_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[2d]">PWM1_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[2e]">PWM2_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[2f]">PWM3_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[2b]">PWMTrip_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[1b]">SPI0_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[1c]">SPI1_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[1a]">UART_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[15]">UnUsed_Handler</a> from startup_aducrf101.o(.text) referenced 7 times from startup_aducrf101.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[14]">WDog_Tmr_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[a]">WakeUp_Int_Handler</a> from startup_aducrf101.o(.text) referenced from startup_aducrf101.o(RESET)
 <LI><a href="#[31]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_aducrf101.o(.text)
 <LI><a href="#[30]">main</a> from main.o(.text) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(.text)
</UL>
<P><STRONG><a name="[66]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[32]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[65]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[67]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[68]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ADC0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Int_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA_ADC_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA_Err_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA_I2C0_MRX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA_I2C0_MTX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA_I2C0_SRX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA_I2C0_STX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA_SPI0_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA_SPI0_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA_SPI1_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA_SPI1_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA_UART_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA_UART_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>Ext_Int0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Ext_Int1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Ext_Int2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>Ext_Int7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>Flsh_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C0_Master_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C0_Slave_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PWM0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PWM1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PWM2_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PWM3_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PWMTrip_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>UART_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UnUsed_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>WDog_Tmr_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WakeUp_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducrf101.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>main</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = main &rArr; InitRadioTransmit &rArr; RadioSetFrequency &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batery
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSetModulationType
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRadioTransmit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Timer0
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_External_Interrup
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigPins
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[e]"></a>Ext_Int3_Handler</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, switches.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Ext_Int3_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Ext_Int4_Handler</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, switches.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Ext_Int4_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Ext_Int5_Handler</STRONG> (Thumb, 242 bytes, Stack size 8 bytes, switches.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Ext_Int5_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Ext_Int6_Handler</STRONG> (Thumb, 242 bytes, Stack size 8 bytes, switches.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Ext_Int6_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GP_Tmr1_Int_Handler</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, switches.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>Config_External_Interrup</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, switches.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>batery</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, batery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = batery
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>leds</STRONG> (Thumb, 444 bytes, Stack size 0 bytes, leds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_Int6_Handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_Int5_Handler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_Int4_Handler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_Int3_Handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batery
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>Config_Timer0</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, microphone.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>GP_Tmr0_Int_Handler</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, microphone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GP_Tmr0_Int_Handler &rArr; RadioSend &rArr; RadioCommitRadioConfig &rArr; RadioConfigure &rArr; RadioToOffMode &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSend
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCopyShort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>RadioGetAPIVersion</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, radioeng.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>RadioPowerOff</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RadioPowerOff &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandNoWait
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
</UL>

<P><STRONG><a name="[4f]"></a>RadioInit</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RadioInit &rArr; RadioCommitRadioConfig &rArr; RadioConfigure &rArr; RadioToOffMode &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioPowerOff
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitForPowerUp
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSyncComms
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRadioConfiguration
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOffMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRadioTransmit
</UL>

<P><STRONG><a name="[51]"></a>RadioTerminateRadioOp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>

<P><STRONG><a name="[52]"></a>RadioSetFrequency</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = RadioSetFrequency &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRadioTransmit
</UL>

<P><STRONG><a name="[38]"></a>RadioSetModulationType</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RadioSetModulationType
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>RadioPayldManchesterEncode</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, radioeng.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>RadioPayldDataWhitening</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, radioeng.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>RadioTxPacketFixedLen</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>

<P><STRONG><a name="[6c]"></a>RadioTxPacketComplete</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radioeng.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>RadioTxSetPA</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RadioTxSetPA
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRadioTransmit
</UL>

<P><STRONG><a name="[57]"></a>RadioTxCarrier</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>

<P><STRONG><a name="[58]"></a>RadioTxPreamble</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>

<P><STRONG><a name="[59]"></a>RadioRxPacketFixedLen</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>

<P><STRONG><a name="[5c]"></a>RadioRxPacketAvailable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxPacketRead
</UL>

<P><STRONG><a name="[5b]"></a>RadioRxPacketRead</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxPacketAvailable
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapRead
</UL>

<P><STRONG><a name="[5d]"></a>RadioRxBERTestMode</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
</UL>

<P><STRONG><a name="[13]"></a>Ext_Int8_Handler</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Ext_Int8_Handler &rArr; RadioMMapRead
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducrf101.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>RadioOn</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RadioOn &rArr; RadioToOnMode &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRadioTransmit
</UL>

<P><STRONG><a name="[37]"></a>InitRadioTransmit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = InitRadioTransmit &rArr; RadioSetFrequency &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioOn
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxSetPA
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSetFrequency
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>RadioToSleepMode</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, radioeng.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandNoWait
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnState
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioReadState
</UL>

<P><STRONG><a name="[3b]"></a>RadioCopyShort</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RadioCopyShort &rArr; RadioMMapWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GP_Tmr0_Int_Handler
</UL>

<P><STRONG><a name="[3c]"></a>RadioSend</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RadioSend &rArr; RadioCommitRadioConfig &rArr; RadioConfigure &rArr; RadioToOffMode &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GP_Tmr0_Int_Handler
</UL>

<P><STRONG><a name="[34]"></a>ConfigPins</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRadioConfiguration
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSetFrequency
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSetFrequency
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSetFrequency
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[6f]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[61]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[33]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[71]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[72]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[74]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[75]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3f]"></a>RadioSPIXferByte</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, radioeng.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnCmdLdr
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandBytes
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioReadState
</UL>

<P><STRONG><a name="[3d]"></a>RadioReadState</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RadioReadState
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSPIXferByte
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToSleepMode
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOffMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnState
</UL>

<P><STRONG><a name="[41]"></a>RadioWaitOnState</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RadioWaitOnState &rArr; RadioReadState
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioReadState
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToSleepMode
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOffMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>

<P><STRONG><a name="[42]"></a>RadioSendCommandBytes</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSPIXferByte
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandNoWait
</UL>

<P><STRONG><a name="[43]"></a>RadioSendCommandNoWait</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToSleepMode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioPowerOff
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOffMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>

<P><STRONG><a name="[44]"></a>RadioToOnMode</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RadioToOnMode &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandNoWait
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnState
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioReadState
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioOn
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxPacketFixedLen
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxPreamble
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxCarrier
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxPacketFixedLen
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTerminateRadioOp
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfigure
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSend
</UL>

<P><STRONG><a name="[45]"></a>RadioWaitOnCmdLdr</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RadioWaitOnCmdLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSPIXferByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSyncComms
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
</UL>

<P><STRONG><a name="[46]"></a>RadioSendCommandWait</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RadioSendCommandWait &rArr; RadioWaitOnCmdLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnCmdLdr
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxBERTestMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxPacketFixedLen
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxPreamble
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxCarrier
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxPacketFixedLen
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSyncComms
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfigure
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSend
</UL>

<P><STRONG><a name="[47]"></a>RadioMMapWrite</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RadioMMapWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSPIXferByte
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_Int8_Handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxBERTestMode
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxPreamble
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxCarrier
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxPacketFixedLen
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfigure
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCopyShort
</UL>

<P><STRONG><a name="[48]"></a>RadioToOffMode</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RadioToOffMode &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandNoWait
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnState
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioReadState
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfigure
</UL>

<P><STRONG><a name="[49]"></a>RadioConfigure</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RadioConfigure &rArr; RadioToOffMode &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOffMode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioToOnMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioCommitRadioConfig
</UL>

<P><STRONG><a name="[4a]"></a>RadioCommitRadioConfig</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RadioCommitRadioConfig &rArr; RadioConfigure &rArr; RadioToOffMode &rArr; RadioSendCommandNoWait &rArr; RadioSendCommandBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioConfigure
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxBERTestMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxPacketFixedLen
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxPreamble
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxCarrier
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioTxPacketFixedLen
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSend
</UL>

<P><STRONG><a name="[4b]"></a>SetRadioConfiguration</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetRadioConfiguration
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
</UL>

<P><STRONG><a name="[4d]"></a>RadioSyncComms</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RadioSyncComms &rArr; RadioSendCommandWait &rArr; RadioWaitOnCmdLdr
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandWait
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnCmdLdr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
</UL>

<P><STRONG><a name="[50]"></a>RadioWaitForPowerUp</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, radioeng.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
</UL>

<P><STRONG><a name="[5a]"></a>RadioMMapRead</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, radioeng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RadioMMapRead
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSPIXferByte
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_Int8_Handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioRxPacketRead
</UL>

<P><STRONG><a name="[40]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, radioeng.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnCmdLdr
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandBytes
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioReadState
</UL>

<P><STRONG><a name="[3e]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, radioeng.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioMMapWrite
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioWaitOnCmdLdr
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioSendCommandBytes
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioReadState
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
